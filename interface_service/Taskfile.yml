version: '3'

vars:
  BUILDER_IMAGE: interface_service_image
  PWD:
    sh: pwd

tasks:
  prepare:
    - task: venv_create
    - task: venv_activate
    - task: pip_install
  venv_create:
    cmds:
      - python -m venv {{.PWD}}/interface_service/interface_venv
  venv_activate:
    cmds:
      - unameOut="$(uname -s)"
      - if [ unameOut == "msys" ] || [ unameOut == "cygwin" ]; then source {{.PWD}}/interface_service/interface_venv/Scripts/activate; else source {{.PWD}}/interface_service/interface_venv/bin/activate; fi
  pip_install:
    cmds:
      - pip install -r {{.PWD}}/interface_service/requirements.txt
  build_docker:
    deps: [prepare]
    cmds: ["docker build -t {{.BUILDER_IMAGE}} ."]
  docker_run:
    deps: [build_docker]
    interactive: true
    vars:
      UID:
        sh: id -u
      GID:
        sh: id -g
      PORT: 8080
      SERVICE_NAME:
        sh: basename "$PWD"
    cmds:
      - >
        docker run 
        -p {{.PORT}}:{{.PORT}}
        --network host
        --user {{.UID}}:{{.GID}}
        --volume {{.PWD}}/models:/app/models
        --rm
        --name {{.SERVICE_NAME}}
        {{.BUILDER_IMAGE}}
