ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.global-static-ip-name: ${STATIC_IP_NAME}
    networking.gke.io/managed-certificates: ${INGRESS_MANAGED_CERTIFICATE_NAME}
  hosts:
    - ${HOSTNAME}

learningService:
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9010"
    prometheus.io/path: "/metrics"

interfaceService:
  replicaCount: ${INTERFACE_SERVICE_REPLICA_COUNT}
  service:
    # Required for GKE Ingress
    type: NodePort
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9000"
    prometheus.io/path: "/metrics"

frontend:
  replicaCount: ${FRONTEND_REPLICA_COUNT}
  service:
    # Required for GKE Ingress
    type: NodePort

config:
  gcloud:
    # Create secret with the sa.json data field, containing the JSON service account key
    serviceAccountKeySecret: ${APPLICATION_SERVICE_ACCOUNT_KEY_SECRET}
    serviceAccountKeySecretKey: "sa.json"
  pubsub:
    projectId: ${GCLOUD_PROJECT_ID}
    dataTopicId: ${PUBSUB_NEW_DATA_TOPIC_NAME}
    modelTopicId: ${PUBSUB_NEW_MODEL_TOPIC_NAME}
    dataSubscriptionId: "new-data"
    newModelSubscriptionId: "new-model"
  objectStorage:
    endpoint: "storage.googleapis.com"
    accessKey: ${DATA_MODEL_BUCKET_ACCESS_KEY}
    secretKey: ${DATA_MODEL_BUCKET_SECRET_KEY}
    tls: true
    bucketName: ${DATA_MODEL_BUCKET_NAME}
    modelObjectKey: "model.joblib"
