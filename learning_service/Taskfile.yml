version: '3'

vars:
  BUILDER_IMAGE: learning_service_image

tasks:
  prepare:
    - task: venv_create
    - task: venv_activate
    - task: pip_install
  venv_create:
    cmds:
      - python -m venv {{.PWD}}/learning_service/learning_venv
  venv_activate:
    cmds:
      - unameOut="$(uname -s)"
      - if [ unameOut == "msys" ] || [ unameOut == "cygwin" ]; then source {{.PWD}}/learning_service/learning_venv/Scripts/activate; else source {{.PWD}}/learning_service/learning_venv/bin/activate; fi
  pip_install:
    cmds:
      - pip install -r {{.PWD}}/learning_service/requirements.txt
  build_docker:
    deps: [prepare]
    cmds: ["docker build -t {{.BUILDER_IMAGE}} ."]
  docker_run:
    deps: [build_docker]
    interactive: true
    vars:
      UID:
        sh: id -u
      GID:
        sh: id -g
      PWD:
        sh: pwd
      SERVICE_NAME:
        sh: basename "$PWD"
    cmds:
      - >
        docker run -it
        --network host
        --user {{.UID}}:{{.GID}}
        --volume {{.PWD}}:/app
        --rm
        --name {{.SERVICE_NAME}}
        {{.BUILDER_IMAGE}}
  lint:
    - >
      pylint --rcfile={{.PWD}}/learning_service/.pylintrc {{.PWD}}/learning_service/src/
  mllint:
    - mllint --output report.md
