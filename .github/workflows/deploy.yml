name: Deploy

on:
  workflow_call:
    inputs:
      chart_version:
        description: 'Version of Helm Chart to deploy'
        type: string
        required: true
  push: {}

env:
  TERRAFORM_BUILDER_NAME: terraform-builder

jobs:
  deploy_test:
    name: 'Google Cloud - plan'
    environment: test
    runs-on: ubuntu-latest
    env:
      GCLOUD_PROJECT_ID: remla2022-test
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Prepare builder
        uses: ./.github/actions/builder
        with:
          file: terraform/Dockerfile
          context: terraform
          name: ${{ env.TERRAFORM_BUILDER_NAME }}
      - name: Prepare credentials
        env:
          TERRAFORM_SA_KEY_BASE64: ${{ secrets.terraform_sa_key_base64 }}
        run: |
          echo $TERRAFORM_SA_KEY_BASE64 | base64 --decode > terraform/terraform-credentials.json
      - name: Google Cloud Terraform init
        uses: ./.github/actions/builder_run
        with:
          image: ${{ env.TERRAFORM_BUILDER_NAME }}
          command: task terraform:gcloud:init PROJECT_ID=$GCLOUD_PROJECT_ID -- --input=false
      - name: Kubernetes Terraform init
        uses: ./.github/actions/builder_run
        with:
          image: ${{ env.TERRAFORM_BUILDER_NAME }}
          command: task terraform:kubernetes:init PROJECT_ID=$GCLOUD_PROJECT_ID -- --input=false
      - name: Google Cloud Terraform apply
        uses: ./.github/actions/builder_run
        with:
          image: ${{ env.TERRAFORM_BUILDER_NAME }}
          command: >-
            task terraform:gcloud:apply PROJECT_ID=$GCLOUD_PROJECT_ID -- 
            --input=false 
            --var-file=${{ inputs.terraform_variables_file }}
      - name: Kubernetes Terraform apply
        uses: ./.github/actions/builder_run
        with:
          image: ${{ env.TERRAFORM_BUILDER_NAME }}
          command: >-
            task terraform:kubernetes:apply PROJECT_ID=$GCLOUD_PROJECT_ID -- 
            --input=false 
            --var-file=${{ inputs.terraform_variables_file }}
            --var=chart_version=${{ inputs.chart_version }}