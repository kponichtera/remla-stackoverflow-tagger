name: Deploy Services
on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Parse version info from tag
        run: |
          # GITHUB_REF is like refs/tags/v2.3.5, so strip the first 11 chars
          VERSION=${GITHUB_REF:11}
          MAJOR=`echo "$VERSION" | cut -d . -f 1`
          MINOR=`echo "$VERSION" | cut -d . -f 2`
          PATCH=`echo "$VERSION" | cut -d . -f 3`
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "version_major=$MAJOR" >> $GITHUB_ENV
          echo "version_minor=$MINOR" >> $GITHUB_ENV
          echo "version_patch=$PATCH" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push learning service
        uses: docker/build-push-action@v2
        with:
          context: ./learning_service
          push: true
          tags: TODO:latest,TODO:${{ env.version_major }}-latest,TODO:${{ env.version_major }}.${{ env.version_minor }}-latest,TODO:${{ env.version }}
          cache-to: type=inline
          cache-from: type=registry,ref=TODO:latest

      - name: Build and push inference service
        uses: docker/build-push-action@v2
        with:
          context: ./inference_service
          push: true
          tags: TODO:latest,TODO:${{ env.version_major }}-latest,TODO:${{ env.version_major }}.${{ env.version_minor }}-latest,TODO:${{ env.version }}
          cache-to: type=inline
          cache-from: type=registry,ref=TODO:latest