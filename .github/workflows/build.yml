name: Build

on:
  pull_request:
    branches: [ master ]
  push:
    tags: [ 'v*.*.*' ]

env:
  IMAGE_NAME_BASE: ghcr.io/${{ github.repository }}
  HELM_BUILDER_NAME: helm-builder:latest

jobs:
  learning-service:
    name: Build learning service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Login to image registry
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        uses: ./.github/actions/build_and_push
        with:
          context: ./learning_service
          file: ./learning_service/Dockerfile
          image: ${{ env.IMAGE_NAME_BASE }}/learning-service
          push: ${{ github.event_name != 'pull_request' }}
  interface-service:
    name: Build interface service
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Login to image registry
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        uses: ./.github/actions/build_and_push
        with:
          context: ./interface_service
          file: ./interface_service/Dockerfile
          image: ${{ env.IMAGE_NAME_BASE }}/interface-service
          push: ${{ github.event_name != 'pull_request' }}
  frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-buildx-action@v2
      - name: Login to image registry
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Docker image
        uses: ./.github/actions/build_and_push
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          image: ${{ env.IMAGE_NAME_BASE }}/frontend
          push: ${{ github.event_name != 'pull_request' }}
  helm:
    name: Package and publish Helm Chart
    runs-on: ubuntu-latest
#    if: github.event_name != 'pull_request'
    needs:
      - learning-service
      - interface-service
      - frontend
    env:
      CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CR_OWNER: remla2022
      CR_GIT_REPO: stackoverflow-tagger
    steps:
      - uses: actions/checkout@v3
      - uses: helm/chart-releaser-action@v1.4.0
        with:
          install_only: true
      - uses: docker/setup-buildx-action@v2
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Prepare builder
        uses: ./.github/actions/builder
        with:
          file: helm/Dockerfile
          name: ${{ env.HELM_BUILDER_NAME }}
      - name: Package Helm Chart
        uses: ./.github/actions/builder_run
        with:
          image: ${{ env.HELM_BUILDER_NAME }}
          command: task helm:package HELM_PACKAGE_DIR=.cr-release-packages
      - name: Upload release
        run: cr upload
      - name: Update Helm repository index
        run: cr index --push
