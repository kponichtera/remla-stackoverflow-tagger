imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

learningService:
  image:
    repository: ghcr.io/remla2022/stackoverflow-tagger/learning-service
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  serviceAccount:
    create: true
    annotations: {}
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podAnnotations: {}
  podSecurityContext: { }
    # fsGroup: 2000
  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  persistence:
    enabled: true
    storageClassName: ""
    size: 10Gi
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}

interfaceService:
  replicaCount: 1
  image:
    repository: ghcr.io/remla2022/stackoverflow-tagger/interface-service
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 8000
  serviceAccount:
    create: true
    annotations: { }
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podAnnotations: { }
  podSecurityContext: { }
    # fsGroup: 2000
  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

frontend:
  replicaCount: 1
  image:
    repository: ghcr.io/remla2022/stackoverflow-tagger/frontend
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 8080
  serviceAccount:
    create: true
    annotations: { }
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  podAnnotations: { }
  podSecurityContext: { }
    # fsGroup: 2000
  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: { }
  tolerations: [ ]
  affinity: { }

config:
  gcloud:
    # Create secret with the sa.json data field, containing the JSON service account key
    serviceAccountKeySecret: ""
    serviceAccountKeySecretKey: "sa.json"
  pubsub:
    projectId: ""
    dataTopicId: ""
    modelTopicId: ""
    dataSubscriptionId: ""
    newModelSubscriptionId: ""
  objectStorage:
    endpoint: ""
    accessKey: ""
    secretKey: ""
    tls: false
    bucketName: ""
    modelObjectKey: "model.joblib"
